<?xml version="1.0" encoding="UTF-8"?>

<project name ="POS" default="build" basedir=".">

	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="etc.dir" value="${basedir}/etc" />
    <property name="res.dir" value="${basedir}/resources" />
	<property name="main.class" value="ee.ut.math.tvt.Team2.Intro" />

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>



	<!-- classpaths -->
	<path id="build.classpath">
		<fileset id="build.libs" dir="${lib.dir}" includes="*.jar"/>

		<!-- see lÃ¤heb siia ju? dist.files ka?-->
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>


	<path id="run.classpath">
		<pathelement location="${build.classes.dir}" />
		<pathelement location="${etc.dir}"/>
		<fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${lib.hibernate.dir}">
            <include name="*.jar"/>
        </fileset>

		<path refid="build.classpath" />
	</path>


	<path id="dist.files">
		<fileset dir="${res.dir}" />
		<fileset dir="${etc.dir}">
			<exclude name="*.dtd"/>
		</fileset>
		<pathelement location="application.properties"/>
		<pathelement location="version.properties"/>
	</path>



	<!-- TARGETS -->

	<target name="build" >
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<copy todir="${build.dir}" file="application.properties" />
		<copy todir="${build.dir}" file="version.properties" />
		<copy todir="${build.dir}/etc">
			<fileset dir="${etc.dir}" />
		</copy>
		<copy todir="${build.dir}/resources">
			<fileset dir="${res.dir}" />
		</copy>

		<javac
			srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
			includeantruntime="false">

			<classpath refid="build.classpath" />
		</javac>

	</target>


	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}"/>
	</target>

	

	<target name="run" depends="build" description="Runs the new build project">
	               <java classname="ee.ut.math.tvt.Team2.Intro"
	                    classpathref="run.classpath"
	                    fork="yes">
	                  <jvmarg value="-Xdebug" />
	                  <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
	                  <jvmarg value="-Xnoagent"/>
	                  <jvmarg value="-Djava.compiler= NONE"/>
	                </java>
					
	        </target>


	<target name="dist" depends="build">
		<mkdir dir="${build.dir}/jar"/>

		<manifestclasspath property="jar.classpath" jarfile="${build.dir}/jar/Team2.jar">
			<classpath refid="build.classpath"/>
		</manifestclasspath>

		<jar jarfile="${build.dir}/jar/Team2.jar" basedir="${build.classes.dir}">
			<zipfileset refid="build.libs" />
			<zipfileset dir="${basedir}/resources" />
			<path refid="dist.files"/>

			<manifest>
				<attribute name="Main-Class" value="${main.class}"/>
				<attribute name="Class-Path" value="${jar.classpath}"/>
			</manifest>
		</jar>

		<!-- build number updating -->
		<propertyfile
			file="version.properties">
			<entry key="build.revision.number" type="int" default="0" operation="+" value="1"/>
		</propertyfile>
	</target>


	<target name="jrun" >
		<java jar="${build.dir}/jar/Team2.jar" fork="true" />
	</target>
	
	<target name="runc" depends="build" description="Run the application (console)">
			<java classname="ee.ut.math.tvt.Team2.Intro" classpathref="run.classpath" fork="yes">
				<arg value="console" />
			</java>
	</target>
	
	
	<target name="git_commit">
		<input
			message="Username:"
			addproperty="user.github"/>
		<input
			message="Password:"
			addproperty="password.github"/>
		<input
			message="Write a comment for your commit:"
			addproperty="comment.text"/>
		<exec executable="git">
			<arg value="add"/>
			<arg value="-A"/>
		</exec>
		<exec executable="git">
			<arg value="commit"/>
			<arg value="-m"/>
			<arg value="${comment.text}"/>
			
		</exec>
		<exec executable="git">
			<arg value="push"/>
			<arg value="https://${user.github}:${password.github}@github.com/PepticSet/SwEng2014Team2.git"/>
		</exec>
	</target>
	
	<target name="git_tag" depends="git_commit">
		<input message="Enter tag name:"
			addproperty="tag.name"/>
		<input message="Enter comment about tag:"
			addproperty="comment.tag"/>
		<exec executable="git">
			<arg line="tag -a ${tag.name} -m '${comment.tag}'"/>
		</exec>
		<exec executable="git">
			<arg line="push --tags"/>
		</exec>
	</target>

	<target name="dbmanager" description="Start the HSQLDB manager">
		<java
			classname="org.hsqldb.util.DatabaseManagerSwing"
			classpathref="run.classpath"
			fork="yes"
		>
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<target name="startdb" description="Start the HSQLDB with the default params">
		<java
			classname="org.hsqldb.Server"
			classpathref="run.classpath"
			fork="yes"
		>
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>
	
</project>